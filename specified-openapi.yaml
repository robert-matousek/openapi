---
openapi: 3.0.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  "/":
    get:
      summary: Health Check
      operationId: health_check__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/api/concepts/process":
    post:
      tags:
      - Process RDF
      summary: Process Concepts
      description: |-
        Process concepts from either:

        1. A URL to the RDF file.

        2. An uploaded RDF file.

        Args:
            url (HttpUrl, optional): The URL of the RDF file (if using a URL).
            file (UploadFile, optional): The RDF file uploaded directly.
            rdf_format (str): The format of the RDF file (xml, json, or turtle).
            uri (str): The URI of the concept scheme being processed.
            language (str): The language code for processing concepts (e.g., "en" for English).


        Returns:
            dict: A message confirming the successful processing of the concepts.
      operationId: process_concepts_api_concepts_process_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Body_process_concepts_api_concepts_process_post"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/concepts/search/hits":
    post:
      tags:
      - Vocabulary hits
      summary: Find Hits Text
      description: Finds hits in the given text based on the specified URIs and languages.
      operationId: find_hits_text_api_concepts_search_hits_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Body_find_hits_text_api_concepts_search_hits_post"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/concepts/search/misses":
    post:
      tags:
      - Vocabulary misses
      summary: Search Misses
      description: "Returns the top n-grams with the highest TF-IDF scores that do
        not match any concepts from the provided URIs.\n\n:param request: The request
        body containing the document path, language code, \n                top_k
        value, and vocabulary.\n:return: A list of non-matching n-grams with their
        frequency and TF-IDF score."
      operationId: search_misses_api_concepts_search_misses_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SearchMissesRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/concepts/tag/text":
    post:
      tags:
      - Tag text
      summary: Tag Text
      operationId: tag_text_api_concepts_tag_text_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TagRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/concepts/export":
    post:
      tags:
      - Exports tags
      summary: Convert Concepts
      description: |-
        Converts a list of concepts into a specified document format.

        :param request: The request body containing the list of concepts and the desired output format.
        :return: A message confirming the conversion or an error.
      operationId: convert_concepts_api_concepts_export_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ConvertConceptsRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    Body_find_hits_text_api_concepts_search_hits_post:
      properties:
        text:
          anyOf:
          - type: string
          - type: 'null'
          title: Text
        uris:
          anyOf:
          - type: string
          - items:
              type: string
            type: array
          title: Uris
        language:
          type: string
          title: Language
        file:
          anyOf:
          - type: string
            format: binary
          - type: 'null'
          title: File
      type: object
      required:
      - uris
      - language
      title: Body_find_hits_text_api_concepts_search_hits_post
    Body_process_concepts_api_concepts_process_post:
      properties:
        request_body:
          "$ref": "#/components/schemas/ProcessConceptsRequest"
        file:
          type: string
          format: binary
          title: File
          description: The RDF file to be uploaded.
      type: object
      required:
      - request_body
      title: Body_process_concepts_api_concepts_process_post
    ConvertConceptsRequest:
      properties:
        concepts:
          items:
            "$ref": "#/components/schemas/Tag"
          type: array
          title: Concepts
          description: A list of concepts to convert into a document.
        format:
          type: string
          pattern: "^(csv|html|word)$"
          title: Format
          example: csv
      type: object
      required:
      - concepts
      - format
      title: ConvertConceptsRequest
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ProcessConceptsRequest:
      properties:
        url:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Url
          description: The URL of the RDF file.
        uri:
          type: string
          minLength: 1
          title: Uri
          description: The URI of the concept scheme being processed.
          example: http://example.com/scheme
        language:
          type: string
          title: Language
          description: The language of the text.
          example: nl
        rdf_format:
          type: string
          pattern: "^(xml|json|turtle)$"
          title: Rdf Format
          description: 'The format of the RDF file. Allowed values: xml, json, turtle'
          example: turtle
      type: object
      required:
      - uri
      - language
      - rdf_format
      title: ProcessConceptsRequest
      description: Pydantic model to validate and parse the request body for /api/concepts/process
        endpoint.
    SearchMissesRequest:
      properties:
        document_path:
          type: string
          title: Document Path
        lang_code:
          type: string
          title: Lang Code
        top_k:
          type: integer
          title: Top K
        existing_vocab:
          items:
            type: string
          type: array
          title: Existing Vocab
      type: object
      required:
      - document_path
      - lang_code
      - top_k
      - existing_vocab
      title: SearchMissesRequest
    Tag:
      properties:
        term:
          type: string
          title: Term
          description: The term of the concept.
        uri:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Uri
          description: The URI of the concept.
      type: object
      required:
      - term
      - uri
      title: Tag
    TagRequest:
      properties:
        uuid:
          type: string
          title: Uuid
          description: The UUID of the document from the search request.
        selected_uris:
          anyOf:
          - type: string
          - items:
              type: string
            type: array
          title: Selected Uris
          description: The URI or list of URIs of the selected concepts.
          examples:
          - http://example.com/concept/raamkozijn
        first_only:
          anyOf:
          - type: boolean
          - type: 'null'
          title: First Only
          description: Whether to tag only the first occurrence of each concept.
          default: false
      type: object
      required:
      - uuid
      - selected_uris
      title: TagRequest
      description: |-
        Pydantic model to validate and parse the request body for /api/concepts/tag endpoint.

        Attributes:
            text (str): The text to be tagged.
            selected_uris (Union[str, List[str]]): The URI or list of URIs of the selected concepts.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
