openapi: 3.0.0
info:
  title: Specified API
  description: >-
    Transform standards documents into machine-readable requirements.
    
    ***
    
    ## API Reference
  
    The Specified API is organized around [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer). Our API has predictable resource-oriented URLs, accepts [form-encoded](https://en.wikipedia.org/wiki/POST_(HTTP)#Use_for_submitting_web_forms) request bodies, returns [JSON-encoded](http://www.json.org/) responses, and uses standard HTTP response codes, authentication, and verbs.

    ***

    ## API Authentication
    
    The Specified API uses [API keys](/docs/keys) to authenticate requests.
    Authentication to the API is performed via HTTP Basic Auth. Provide your APP ID and API key as the basic auth username value. You do not need to provide a password. All API requests must be made over HTTPS. Calls made over plain HTTP will fail or calls without authentication will fail.
      
      
      To request API keys [contact support](mailto:support@specified.ai).
      
      
  termsOfService: https://specified.ai/terms-of-service.html
  contact:
    name: Specified.ai
    url: https://specfied.ai
    email: support@specified.ai
  version: '1.0'
servers:
  - url: https://api.specified.ai/v1
    description: Main (production) server
  - url: https://staging-api.specified.ai
    description: Internal staging server for testing

paths:
  '/concepts/tag':
    post:
      summary: Hyperlink to concepts in a SKOS thesaurus
      description: Takes a string of text, a thesaurus identifier (URI), and a language code, and tags concepts in the text with hyperlinks to the thesaurus.
      operationId: replaceHyperlinks
      requestBody:
        description: Input text, thesaurus identifier, and language code
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceHyperlinksRequest'
      responses:
        '200':
          description: The modified text with hyperlinks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplaceHyperlinksResponse'
        '400':
          description: Invalid input provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message explaining the invalid input.
                    example: "Invalid thesaurus URI or language code."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing what went wrong.
                    example: "Error processing the text."

  '/concepts/process':
    get:
      summary: "Preprocess concepts in a SKOS thesaurus"
      description: "Fetches and processes RDF data from a given URL."
      parameters:
        - name: url
          in: query
          required: true
          schema:
            type: string
            format: uri
            description: "The URL of the RDF file."
            example: "http://example.com/data.rdf"
        - name: rdf_format
          in: query
          required: true
          schema:
            type: string
            pattern: "^(xml|json|turtle)$"
            description: "The format of the RDF file. Allowed values: xml, json, turtle."
            example: "turtle"
        - name: uri
          in: query
          required: true
          schema:
            type: string
            minLength: 1
            description: "The thesaurus identifier (URI)."
            example: "http://example.com/scheme"
      responses:
        '200':
          description: "Successful response indicating that the RDF data was processed."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: "A message providing additional information about the processing result."
                    example: "The RDF data was processed successfully."
        '400':
          description: "Bad Request. The request was invalid or cannot be otherwise served."
        '404':
          description: "Not Found. The requested resource could not be found."
        '500':
          description: "Internal Server Error. A generic error occurred on the server."

components:
  schemas:
    ReplaceHyperlinksRequest:
      type: object
      properties:
        text:
          type: string
          description: Input text.
          example: "The quick brown fox jumps over the lazy dog."
        uri:
          type: string
          description: Identifier (URI) of the thesaurus.
        language:
          type: string
          description: Language code to process the text (e.g., 'en' for English, 'nl' for Dutch).          
      required:
        - text
        - uri
        - language

    ReplaceHyperlinksResponse:
      type: object
      properties:
        linkedText:
          type: string
          example: '<a href="https://example.com/word/brown">brown</a> fox jumps over the <a href="https://example.com/word/dog">dog</a>.'
    
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-API-KEY
    appId:
      type: apiKey
      in: header
      name: X-APP-ID
security:
  - apiKey: []
    appId:  []